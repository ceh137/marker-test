Проект представляет собой платформу, которая используется для цифровой маркировки различных промышленных изделий (интернет вещей). Требуется локально развернуть систему, доработать одну функцию и выгрузить изменения в ПРИВАТНЫЙ репозиторий github (с 2 коммитами, исходное и доработанное состояние кода, мой логин @atr-one).

Развертывание:

1. Установить зависимости composer
2. База находится в корне проекта, файл marker.sql.zip (коннект в настройках cfg/general.inc.php)

Задание:

После входа в личный кабинет пользователя pavlov@ngkomplekt.ru (пароль: demo12345) слева 2 вкладки - "Сканирование" и "Оприходование". В разделе "Сканирование" есть пагинация и рабочий поиск по записям, требуется сделать аналогичную пагинацию и поиск в разделе "Оприходование" (у нас есть ряд записей с пагинацией, по клику на записи она разворачивается в список изделий, требуется отфильтровать подходящие записи).

1. Поиск должен осуществляться по id оприходования, наименованию производителя, названию изделия и дате операции в формате DD.MM.YY.
2. При вводе данных в поисковую строку в URL страницы должен добавляться параметр в формате q=123 (при очистке строки параметр скрывается).
3. При поиске должна корректно работать пагинация страниц (параметр offset).
4. Когда поиск идет по названию изделия, найденные изделия подсвечиваются в раскрывающемся списке жирным шрифтом.
5. Когда вводится значение в инпут-поле, то иконка с лупой заменяется на крестик, который очищает поиск (если поле пустое, то у нас снова появляется иконка с лупой).
6. В инпут-поле можно вводить только буквы, цифры, пробел, точку и запятую (все остальные символы не должны быть доступны для ввода).
7. При перезагрузке страницы данные в инпут-поле должны сохраняться (если они были введены ранее).
8. При любом изменении содержимого инпут-поля пагинация сбрасывается на первую страницу.
9. Стиль кода нового функционала должен быть максимально близким к существующему коду проекта.
10. При работе функционала в логах не должно быть никаких ошибок.

Структура проекта:

1. cfg (конфигурация)
2. css (стили)
3. fonts (шрифты)
4. images (изображения)
5. includes (php-файлы, controllers_call - асинхронные контроллеры, controllers_common - общие контроллеры, core - классы и функции)
6. js (js-файлы)
7. partials (html-шаблоны)
8. partials_c (скомпилированные html-шаблоны)
9. storage (хранилище)
10. vendor (зависимости)
11. video (видео)